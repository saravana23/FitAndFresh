@model IEnumerable<ItemInMenu>

@if (Model.Count() > 0)
{
<div class="col-12 post @Model.FirstOrDefault().Cat.Name.Replace(" ",string.Empty) restaurantMenuClass">
    @* 
        - so category name will be assigned as a class attribute
        - so for each catergory name in category, we will set the model to be of type Model.Category.{name}
        - by doing it this way, a separate div will be generated for each category name
        - we will get the name of each model, by returning the name of the category name and then using the Replace method
          to remove any spaces in the name. This will then mean that the name will be altogether, free of spaces
        - I then also set a class of restaurantMenuClass
    *@

    <div class="row">
        <h2 class="text-black"> @Model.FirstOrDefault().Cat.Name</h2>
    </div>
</div>

    <div>
        @foreach (var s in Model)
        {
        <div class="row">
            <h5 class="row col-4">@s.Name</h5>
            <div class="row">
                               
                <div>
                    <p class="row col-4">@s.ItemPrice</p>
                </div>
                
                <div>
                    <p class="row col-2">@s.ProteinContent</p>
                </div>

                <div>
                    <p class="row col-4">@s.ItemDescription</p>
                </div>

            </div>
            <div>
                <img src="@s.ItemPicture" class="img-thumbnail" />
            </div>

        </div>
        <a asp-action="Details" class="btn btn-info form-control" asp-route-id="@s.Id">Details</a>       
        }

    </div>


    @*
        <div class="col-12">
            <div class="row">
                <h4 class="text-success"> @Model.FirstOrDefault().Name</h4>
            </div>
        </div>
    *@

}


